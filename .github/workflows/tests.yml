name: Tests

on:
  push:
    branches: [ main, develop, claude/** ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Run Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.13']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install uv
      run: |
        python -m pip install --upgrade pip
        pip install uv

    - name: Install dependencies
      run: |
        uv pip install --system -r requirements.txt
        uv pip install --system -r requirements-dev.txt

    - name: Run linting
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        python -m flake8 app --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        python -m flake8 app --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics

    - name: Run type checking
      continue-on-error: true
      run: |
        python -m mypy app --ignore-missing-imports

    - name: Run tests with coverage
      run: |
        pytest --cov=app --cov-report=xml --cov-report=term-missing --cov-fail-under=80 -v

    - name: Upload coverage to Codecov
      if: matrix.os == 'ubuntu-latest'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

    - name: Generate coverage badge
      if: matrix.os == 'ubuntu-latest' && github.ref == 'refs/heads/main'
      run: |
        pip install coverage-badge
        coverage-badge -o coverage.svg -f

    - name: Archive test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results-${{ matrix.os }}
        path: |
          htmlcov/
          coverage.xml
          .coverage

  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'

    - name: Install dependencies
      run: |
        pip install uv
        uv pip install --system -r requirements-dev.txt

    - name: Run Black
      run: |
        python -m black --check app tests

    - name: Run isort
      run: |
        python -m isort --check-only app tests

    - name: Run pylint
      continue-on-error: true
      run: |
        python -m pylint app --fail-under=8.0
